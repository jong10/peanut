def add(a, b)
    a
    a + b
end

add(3, add(1, 2))

a = 123

def sum(a, b, c)
    a
    a + b + c
end

sum(1, 2, 3)
a

3 % 2

"asdf" + "1234" + "5678"
"a" == "a"

b = null

"asdf" + 1234
"asdf" + 3.14
"asdf" + null

# not yet!
#1234 + "asdf"

def is_null?(a)
    a
end

is_null?(123)

if 3
    x = 100
    1000
elif 2
    1234
    4567
    8888
    x
else
    9999
end

i = 5
while i
    i = i - 1
end

null

class Student
end

class Student
    def eat(something)
        100
    end
end

s1 = Student.clone()
s1.eat(200)



a = 100
a.to_str()


L = [1, "hello", 3, 4]
L.append(5)
L.append(7)
L.remove(1)

L2 = [1, 2, [3, 4], 5]
L3 = [1, [2, [3, 4, 5], 6], 7, 8]

iter = [1, 2, 3, 4].iterator()
iter.hasNext?()

[].iterator().hasNext?()

iter.next()
iter.next()
iter.next()


# double scope not problem, evaluate_for_stmt()
for x in [1, 2, 3]
    100
end

# die if double scope in evaluate_for_stmt().. need debug
for x in [1, 2, 3]
    x
end

def test()
    # not yet
    #return 8888
    9999
end

xx = {|a| a * a}
xx

xx(2)

x3 = {|b|
    c = b * b
    c * c
}

x3(3)

H = { "a" : 123, "b" : 3333 }
H.get("a")
H.get("b")
H.put("b", 321)
H.get("b")
H.add({"C":"D"})

for key in H.keys()
    Stdio.print(key)
    Stdio.print(" -> ")
    Stdio.printline(H.get(key))
end

H.values()

#Stdio.print("-_-")
Integer
Real
Stdio
Stdio.printline("abcd")

s = Stdio.readline()
Stdio.print("readed : ")
Stdio.printline(s)

Integer == Null

